!function(){"use strict";const e=async o=>{const r=o.classList.contains("animated"),a=()=>o.style.animationPlayState="running";r&&t(o)?(await n(o),a()):r?a():null!=o.firstElementChild&&e(o.firstElementChild)},t=e=>{var t;const n=!!(null===(t=e.textContent)||void 0===t?void 0:t.length),o=e.getElementsByTagName("img").length>0,r=e.getElementsByTagName("video").length>0;return o||n||r},n=async e=>{const t=[],n=e.getElementsByTagName("img");for(let e=0;e<n.length;e++){const r=n.item(e);t.push(o(r))}const a=e.getElementsByTagName("video");for(let e=0;e<a.length;e++){const n=a.item(e);t.push(r(n))}return t.push(document.fonts.ready),Promise.all(t)},o=e=>new Promise(((t,n)=>{e.complete?t():(e.loading="eager",e.onload=()=>t(),e.onerror=()=>n())})),r=e=>new Promise(((t,n)=>{e.onloadeddata=()=>t(),e.onerror=()=>n()})),a=()=>{(()=>{const t=document.querySelectorAll(".animation_container");if(0===t.length)return;const n=new IntersectionObserver((t=>{t.forEach((t=>{if(!t.isIntersecting)return;const o=t.target;e(o),n.unobserve(o)}))}),{threshold:.01});t.forEach((e=>n.observe(e)))})()};"loading"===document.readyState?window.addEventListener("DOMContentLoaded",a):a()}();
